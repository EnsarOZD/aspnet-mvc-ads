@using X.PagedList.Mvc.Core;
@model X.PagedList.IPagedList<Ads.Web.Mvc.Areas.Admin.Models.AdvertViewModel>
@{
    ViewData["Title"] = "Advertisement Details";
    var successMessage = TempData["SuccessMessage"] as string;
}

@if (!string.IsNullOrEmpty(successMessage))
{
    <h5 class="alert alert-success d-flex justify-content-center">@successMessage</h5>
}

<div class="container">

    <h1>Advertisement Details</h1>

    <!-- Topbar Search -->
    <form class="d-none d-sm-inline-block form-inline mr-auto ml-md-3 my-2 my-md-0 mw-100 navbar-search" method="post" asp-area="Admin" asp-action="Index" asp-controller="Advert">
        <div class="input-group">
            <input type="text" class="form-control bg-light border-0 small" name="searchContent" placeholder="Search for advert"
                   aria-label="Search" aria-describedby="basic-addon2">
            <div class="input-group-append">
                <button class="btn btn-primary ml-4" type="submit">
                    <i class="fas fa-search fa-sm"></i>
                </button>
            </div>
        </div>
    </form>


    <table class="table">
        <thead>
            <tr>
                <th>Image</th>
                <th>Title</th>
                <th>Description</th>
                <th>Price</th>
                <th>Click Count</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var advert in Model)
            {
                var advertImagePaths = advert.ImagePaths.Select(path => Url.Content(path)).ToList();

                foreach (var imagePath in advertImagePaths)
                {
                    <tr>
                        <td>
                            @if (!string.IsNullOrEmpty(imagePath))
                            {
                                <img src="@imagePath" alt="Advert Image" width="100">
                            }
                        </td>
                        <td>@advert.Title</td>
                        <td>@advert.Description</td>
                        <td style="width:50px; white-space: nowrap;">@advert.Price €</td>
                        <td>@advert.AdvertClickCount</td>
                        <td class="d-flex">
                            <a asp-action="Edit" asp-route-id="@advert.Id" class="d-block btn alert-info btn-sm font-weight-bold border-0 rounded">Edit</a>
                            <form asp-controller="Advert" asp-area="Admin" asp-action="Delete" method="post">
                                <input type="hidden" name="id" value="@advert.Id" />
                                <button type="submit" class="d-block btn alert-danger btn-sm font-weight-bold border-0 rounded mx-4" onclick="return confirm('Are you sure you want to delete this Ad Listing?');">Delete this advert</button>
                            </form>
                        </td>
                    </tr>
                }
            }

        </tbody>
    </table>
    @* Pagination *@
    <div class="pagination-container">
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center">
                <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { page = 1 })">First</a>
                </li>
                <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                    <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber - 1 })">Previous</a>
                </li>
                @for (int i = 1; i <= Model.PageCount; i++)
                {
                    <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                        <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
                    </li>
                }
                <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                    <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber + 1 })">Next</a>
                </li>
                <li class="page-item @(Model.PageNumber == Model.PageCount ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { page = Model.PageCount })">Last</a>
                </li>
            </ul>
        </nav>
    </div>

</div>

