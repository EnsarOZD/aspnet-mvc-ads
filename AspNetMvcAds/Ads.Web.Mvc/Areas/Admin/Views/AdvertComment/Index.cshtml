@using X.PagedList.Mvc.Core;
@model X.PagedList.IPagedList<Ads.Web.Mvc.Areas.Admin.Models.AdvertCommentsViewModel>

@{
    var successMessage = TempData["SuccessMessage"] as string;
}

@if (!string.IsNullOrEmpty(successMessage))
{
    <div class="alert alert-success">@successMessage</div>
}

<div class="container">
    <h2>Advert Comments</h2>

    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Comment</th>
                <th>Is Active</th>
                <th>Created At</th>
                <th>Updated At</th>
                <th>Deleted At</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var comment in Model)
            {
                <tr>
                    <td>@comment.Id</td>
                    <td>@comment.Comment</td>
                    <td>@comment.IsActive</td>
                    <td>@comment.CreatedAt</td>
                    <td>@comment.UpdatedAt</td>
                    <td>@comment.DeletedAt</td>
                    <td class="d-flex">
                        <form asp-controller="AdvertComment" asp-area="Admin" asp-action="Delete" method="post">
                            <input type="hidden" name="id" value="@comment.Id" />
                            <button type="submit" class="d-block btn alert-danger btn-sm font-weight-bold  border-0 rounded" onclick="return confirm('Are you sure you want to delete this comment?');">Delete this Comment</button>
                        </form>

                        <a asp-action="Edit" asp-route-id="@comment.Id" class="d-block btn alert-info btn-sm font-weight-bold  border-0 rounded mx-4">Edit</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    @* Pagination *@
    <div class="pagination-container">
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center">
                <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { page = 1 })">First</a>
                </li>
                <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                    <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber - 1 })">Previous</a>
                </li>
                @for (int i = 1; i <= Model.PageCount; i++)
                {
                    <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                        <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
                    </li>
                }
                <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                    <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber + 1 })">Next</a>
                </li>
                <li class="page-item @(Model.PageNumber == Model.PageCount ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { page = Model.PageCount })">Last</a>
                </li>
            </ul>
        </nav>
    </div>


</div>
